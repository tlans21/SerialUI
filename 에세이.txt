향후 어떤 SW 개발자로 성장하고 싶은지 SW관련 경험을 토대로 기술하고, SSAFY에 지원하신 동기에 대해서도 작성 바랍니다.
- SW 관련 경험: SW개발, SW프로젝트 및 SW경진대회 경험(참여, 수상 등), IT 관련 자격증 취득 등

* 500자 내외 작성(최대 600자까지 입력 가능)

1안

소프트웨어 개발 방법론을 실천하는 개발자로 성장하려 합니다.
최근 컴퓨터 공학과 교수님의 소개로 타학과 프로젝트의 일부분으로 배터리 모니터링 시스템 프로그램 개발을 맡은 적이 있었습니다.
처음에는 코드가 동작하는 것에만 집중하여 단일 파일 코드 방식으로 짰었습니다. 코드가 길어짐에 따라 가독성이 떨어졌고 설계도를 작성하지 않아 확장성과 생산성이 낮아졌습니다.
이런 문제로 코드를 모듈화 하기로 결정하였습니다.
단일 파일 코드에서 모듈화로의 전환은 단순히 코드 구조를 변경하는 것 이상의 의미를 가졌습니다.
모듈화를 위해서 각 모듈이 어떻게 상호 작용을 하는지, 어떤 데이터를 공유를 할 것 인지에 대한 설계를 깊이 고려해야 했고
해당 과정을 위해서는 디자인 패턴과 소프트웨어 설계 원칙, 개발 방법론 등이 필요하다는 것을 느꼈습니다.
SSAFFY를 통해서 이런 인사이트를 발전시켜 나가고 싶습니다.

2안 ( 모듈화 이유 -가독성 수정)

소프트웨어 개발 방법론을 실천하는 개발자로 성장하려 합니다.
교수님의 추천으로 배터리 모니터링 시스템 개발을 맡은 적이 있었습니다.
해당 프로그램은 BMS보드에서 시리얼 통신 방식으로 전달한
전압, 배터리 셀 등의 온도나 상태의 데이터를 GUI에 나타냅니다. 

초기에 코드가 동작하는 것에만 집중하여 단일 파일 코드로 짰었지만
문제점이 발생하여 모듈화로 전환하였습니다.

첫번째로 기능 간의 높은 결합도입니다.
예시로 BMS 보드의 시스템 데이터와 배터리 셀 데이터를 반복해서 읽어들이는 타이머1과 타이머2가 존재하며 상호배타적 동작을 수행합니다.
때문에 새롭게 타이머들이 추가 되어 동작할 때마다 나머지 타이머들의 동작 상태를 살펴야 합니다.
타이머 기능을 모듈 단위로 분리하고 중개자와만 통신하도록 중개자 패턴을 사용하여 해결하였습니다.  

두번째로 확장성이 떨어졌습니다.
단일 파일 코드에서는 코드의 재사용성이 낮기 때문에 매번 새로운 코드를 작성해야한다는 것 입니다.

단일 파일 코드에서 모듈화 전환은 단순히 코드 구조를 변경하는 것 이상의 의미를 가졌습니다.
모듈화를 위해서 각 모듈이 어떻게 상호 작용을 하는지, 어떤 데이터를 공유를 할 것 인지에 대한 설계를 깊이 고려해야 했고
해당 과정을 위해서는 디자인 패턴과 소프트웨어 설계 원칙, 개발 방법론 등이 필요하다는 것을 느꼈습니다.
SSAFY를 통해서 이런 인사이트를 발전시켜 나가고 싶습니다.




3안
SW 개발 방법론을 실천하는 개발자로 성장하고자 합니다.
배터리 모니터링 시스템 개발을 하였습니다.
본 프로그램은 BMS보드에서 시리얼 통신으로 전달한 전압, 배터리 셀 등의 온도 등의 데이터를 GUI에 나타냅니다. 

초기에 코드 동작을 우선시하여 단일 파일 코드로 작성했지만
진행에 있어 문제가 생겨 모듈화로 전환하였습니다.
기능 간의 높은 결합도로 인해 가독성과 유지보수 작업에 드는 시간이 증가하였습니다.
예로 BMS 보드의 시스템 데이터와 배터리 셀 데이터를 반복해서 읽어들이는 타이머1과 타이머2가 존재하며 상호배타적 동작을 수행합니다.
때문에 새롭게 타이머들이 추가 되어 동작할 때마다 나머지 타이머들의 동작 상태를 살펴야 합니다.
타이머 기능을 모듈 단위로 분리하고 중개자 패턴을 사용하여 결합도를 낮췄습니다. 

단일 파일 코드에서 모듈화는 단순히 코드 구조를 변경하는 것 이상의 의미를 가졌습니다.
각 모듈이 어떻게 상호 작용 하는지, 어떤 데이터를 공유 할 것 인지에 대한 설계를 깊이 고려해야 했고 
이 과정에서 디자인 패턴과 SW 설계 원칙 등의 기술들이 요구된다는 것을 느꼈습니다.
고차원적 사고의 성취를 위해서 SAFFY의 교육이 필요합니다. 






